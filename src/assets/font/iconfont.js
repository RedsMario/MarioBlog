!(function(e) { var t; var c; var n; var o; var a; var i; var s = '<svg><symbol id="mario-logo" viewBox="0 0 1024 1024"><path d="M513.925 40.96c-133.12 0-231.608 74.875-295.69 158.72a546.058 546.058 0 0 0-71.68 126.075c-15.913 39.526-24.31 73.113-24.31 98.57 0 41.185 8.233 73.523 17.265 95.355 0.327 0.82 0.962 1.208 1.29 1.925-13.107 4.403-23.92 14.54-31.355 27.505-9.933 17.285-15.36 40.018-15.36 67.85 0 43.11 15.524 85.606 36.475 118.395 20.951 32.809 46.797 59.535 80.65 59.535h1.905c11.284 37.827 32.092 65.68 55.685 85.115 34.816 28.631 74.875 42.148 92.16 51.2C402.8 953.12 432.722 983.04 512 983.04c79.36 0 109.2-30.003 151.04-51.835 17.367-9.052 57.344-22.569 92.16-51.2 23.593-19.456 44.4-47.288 55.685-85.135h1.905c33.853 0 59.699-26.706 80.65-59.515 20.951-32.789 36.475-75.285 36.475-118.395 0-27.853-5.427-50.565-15.36-67.85-7.189-12.473-17.51-22.221-30.065-26.87 0.226-0.635 0.39-1.208 0.615-1.925 8.745-21.832 16.65-54.067 16.65-98.55 0-26.091-8.151-60.477-24.31-99.84a542.454 542.454 0 0 0-72.335-124.17C741.048 114.955 642.806 40.96 513.946 40.96z m0 40.96c113.357 0 199.516 64.471 258.56 140.8a504.955 504.955 0 0 1 66.56 115.2c14.787 36.086 21.75 67.912 21.75 83.845 0 39.445-7.189 66.642-14.07 83.825-3.215 8.007-5.693 13.127-7.68 16.65a136.806 136.806 0 0 0-33.935 12.165c3.379-12.165 7.454-23.45 10.895-32.01 3.748-4.874 23.675-32.379 23.675-72.315 0-9.523-1.761-12.554-4.485-19.21a165.15 165.15 0 0 0-12.145-23.04c-10.895-17.756-28.098-39.67-53.125-60.785C719.831 284.795 637.604 245.76 512 245.76c-125.604 0-207.831 39.035-257.925 81.285-25.027 21.115-42.23 43.029-53.125 60.805-5.427 8.868-9.421 16.384-12.145 23.04-2.724 6.636-4.485 9.667-4.485 19.19 0 36.864 16.794 63.283 22.405 71.045 3.523 8.479 7.844 20.152 11.51 32.625-10.65-5.346-21.279-8.479-31.355-10.855a173.937 173.937 0 0 1-8.97-19.21c-7.27-17.53-14.705-43.93-14.705-79.36 0-15.36 6.554-46.96 21.115-83.21a505.242 505.242 0 0 1 65.925-116.47C309.29 147.435 396.063 81.92 513.925 81.92z m39.035 34.57l-41.595 42.23-39.71-41.595s-57.201 106.148-56.32 108.79c0.88 2.662 34.57 21.115 34.57 21.115l26.235-87.655 37.13 42.23 33.28-40.96 27.504 87.675 34.57-22.405zM512 286.72c117.207 0 188.805 35.512 231.69 71.68 21.422 18.084 35.43 36.311 44.155 50.565 4.403 7.107 7.189 13.599 8.95 17.92 0.88 2.15 1.68 4.076 1.925 5.12a82.002 82.002 0 0 1-7.045 30.065C765.85 440.975 670.802 368.64 512 368.64c-158.802 0-253.85 72.315-279.675 93.45a82.002 82.002 0 0 1-7.045-30.105c0.246-1.024 1.024-2.95 1.925-5.12a118.58 118.58 0 0 1 8.95-17.9c8.724-14.254 22.733-32.481 44.155-50.565 42.885-36.168 114.483-71.68 231.69-71.68z m0 122.88c40.796 0 77.824 5.94 110.715 14.725-46.244 13.763-67.83 58.225-67.83 58.225a20.623 20.623 0 0 0 37.11 17.92s19.374-39.035 58.88-39.035c25.436 0 52.49 21.135 52.49 21.135 5.284 4.547 12.554 6.144 19.272 4.24a20.46 20.46 0 0 0 14.008-13.845c19.66 11.838 29.594 18.883 37.11 24.945-7.516 19.62-15.995 46.735-15.995 73.605 0 19.046 5.673 47.206 10.875 78.725 5.202 31.54 10.24 65.208 10.24 83.845 0 60.007-22.323 91.832-49.91 114.545-27.607 22.733-60.723 33.69-84.48 46.08-48.005 25.129-62.812 47.37-132.485 47.37s-84.48-22.241-132.485-47.37c-23.757-12.39-56.873-23.347-84.48-46.08-27.587-22.713-49.91-54.559-49.91-114.545 0-18.637 5.038-52.326 10.24-83.845 5.202-31.54 10.875-59.679 10.875-78.725 0-26.87-8.479-53.985-15.995-73.585 8.151-6.246 20.07-14.336 37.765-24.985 2.069 6.492 7.27 11.468 13.742 13.373 6.554 1.925 13.599 0.553 18.883-3.748 0 0 27.033-21.135 52.49-21.135 39.527 0 58.88 39.055 58.88 39.055a20.623 20.623 0 0 0 37.11-17.92s-21.586-44.482-67.83-58.245A426.762 426.762 0 0 1 512 409.6zM399.36 532.48c-16.957 0-30.72 22.487-30.72 50.565 0 22.938 9.114 42.23 21.77 48.64-13.476 18.555-21.77 40.55-21.77 64.635 0 5.038 0.635 9.83 1.29 14.725-70.328-17.695-78.09-46.08-78.09-46.08s-14.09 10.322-14.09 57.59c0 55.685 45.465 58.245 45.465 58.245s5.12 54.395 53.105 54.395c20.726 0 32.317-8.868 33.915-9.585 2.724 2.704 24.637 34.55 57.61 34.55 25.6 0 43.52-15.36 43.52-15.36s20.07 14.725 47.35 14.725c30.966 0 55.05-33.28 55.05-33.28s11.756 8.95 35.185 8.95c23.45 0 47.206-16.794 53.125-55.03 19.128 0 44.175-24.002 44.175-55.685 0-47.432-14.09-58.88-14.09-58.88-15.688 22.241-41.124 36.168-78.09 45.445 0.655-4.895 1.29-9.687 1.29-14.725 0-24.084-8.315-46.08-21.77-64.635 12.656-6.328 21.77-25.682 21.77-48.64 0-28.078-13.763-50.565-30.72-50.565s-30.72 22.487-30.72 50.565c0 4.71 0.553 9.114 1.29 13.435A160.195 160.195 0 0 0 512 573.44a160.195 160.195 0 0 0-83.21 23.04c0.737-4.3 1.29-8.724 1.29-13.435 0-28.078-13.763-50.565-30.72-50.565z m-244.49 27.525c17.203 0 46.162 6.083 68.485 28.16-1.843 14.152-4.629 33.116-8.315 55.03-5.284 31.764-10.875 65.68-10.875 90.89 0 6.144 0.225 12.083 0.635 17.92-9.687-4.403-26.153-17.203-39.69-38.4-17.101-26.726-30.065-63.529-30.065-96.645 0-22.405 4.465-38.482 9.585-47.37 5.12-8.868 9.134-9.585 10.24-9.585z m714.26 0c1.106 0 5.12 0.717 10.24 9.585 5.12 8.888 9.585 24.985 9.585 47.37 0 33.116-12.964 69.919-30.065 96.645-13.517 21.197-30.003 33.997-39.69 38.4 0.41-5.837 0.635-11.755 0.635-17.92 0-25.19-5.591-59.126-10.875-90.89a1548.39 1548.39 0 0 1-8.315-55.03c22.323-22.077 51.282-28.16 68.465-28.16zM512 614.4c58.634 0 102.4 38.646 102.4 81.92s-43.766 81.92-102.4 81.92-102.4-38.646-102.4-81.92S453.366 614.4 512 614.4z" fill="#D81E06" ></path></symbol></svg>'; var d = (d = document.getElementsByTagName('script'))[d.length - 1].getAttribute('data-injectcss'); if (d && !e.__iconfont__svg__cssinject__) { e.__iconfont__svg__cssinject__ = !0; try { document.write('<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>') } catch (e) { console && console.log(e) } } function l() { a || (a = !0, n()) }t = function() { var e, t, c, n; (n = document.createElement('div')).innerHTML = s, s = null, (c = n.getElementsByTagName('svg')[0]) && (c.setAttribute('aria-hidden', 'true'), c.style.position = 'absolute', c.style.width = 0, c.style.height = 0, c.style.overflow = 'hidden', e = c, (t = document.body).firstChild ? (n = e, (c = t.firstChild).parentNode.insertBefore(n, c)) : t.appendChild(e)) }, document.addEventListener ? ~['complete', 'loaded', 'interactive'].indexOf(document.readyState) ? setTimeout(t, 0) : (c = function() { document.removeEventListener('DOMContentLoaded', c, !1), t() }, document.addEventListener('DOMContentLoaded', c, !1)) : document.attachEvent && (n = t, o = e.document, a = !1, (i = function() { try { o.documentElement.doScroll('left') } catch (e) { return void setTimeout(i, 50) }l() })(), o.onreadystatechange = function() { o.readyState == 'complete' && (o.onreadystatechange = null, l()) }) }(window))
